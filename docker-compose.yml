version: '3.8'

services:
  # PostgreSQL Database for development
  postgres:
    image: postgres:15-alpine
    container_name: weekly_report_postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: weekly_report_dev
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5433:5432"  # Changed from 5432 to 5433
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - weekly_report_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d weekly_report_dev"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Redis for caching (optional, for future use)
  redis:
    image: redis:7-alpine
    container_name: weekly_report_redis
    restart: unless-stopped
    ports:
      - "6380:6379"  # Changed from 6379 to 6380
    volumes:
      - redis_data:/data
    networks:
      - weekly_report_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # pgAdmin for database management (optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: weekly_report_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - weekly_report_network
    depends_on:
      postgres:
        condition: service_healthy
    profiles:
      - tools # Only start with: docker-compose --profile tools up

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  weekly_report_network:
    driver: bridge
